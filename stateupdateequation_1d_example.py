# -*- coding: utf-8 -*-
"""StateUpdateEquation_1D_Example

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MNSw_f2G9OJLbQcB1Wx5C38XJ5DwJIm8
"""

import numpy as np
import matplotlib.pyplot as plt

true_value = 3975
n = 10 # Number of iterations

Estimations = np.zeros(n+1)
Estimations[0] = 0
Measurements = np.array([
    0, 3970, 3969, 3990, 3981, 3983, 3972, 3969, 3980, 3976, 3979
])

for i in np.arange(1, n+1):
    Estimations[i] = Estimations[i-1] + 1/i * (Measurements[i] - Estimations[i-1])
    print(Estimations[i])

plt.plot(np.arange(1,n+1), np.full_like(Estimations, true_value)[1:],"*-g")
plt.plot(np.arange(1,n+1), Measurements[1:],"*-r")
plt.plot(np.arange(1,n+1), Estimations[1:],"*-b")
plt.xlabel("iterations")
plt.ylabel("values")
plt.legend(["True Value", "Measured (or Observed) values", "Estimated values"])
# plt.title("Iterations using State Update Equation (a One-Dimensional case)")
plt.show()